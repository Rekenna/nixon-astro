---
import Layout from "@/layouts/Layout.astro";

import { CONTENT_TYPES, contentfulClient } from "@/lib/contentful";
import type { PortfolioCollection } from "@/lib/contentful";
import Breadcrumbs from "@/components/Breadcrumbs";
import PhotoGrid from "@/components/PhotoGrid";

export const prerender = true;
export async function getStaticPaths() {
  const entries = await contentfulClient.getEntries<PortfolioCollection>({
    content_type: CONTENT_TYPES.PORTFOLIO_COLLECTION,
  });

  const pages = entries.items.map((item) => {
    const { title, slug, description, photos } = item.fields;

    const formattedPhotos = photos
      .map((photo, i) => {
        if ("fields" in photo) {
          const {
            title,
            slug: photoSlug,
            content,
            image,
            products,
          } = photo.fields;

          const formattedImage =
            image && "fields" in image
              ? {
                  id: image.sys.id,
                  imageSrc: image.fields.file?.url as string,
                  imageAlt: image.fields.title as string,
                  height: image.fields.file?.details?.image?.height as number,
                  width: image.fields.file?.details?.image?.width as number,
                }
              : null;

          return {
            title,
            slug: photoSlug,
            content,
            image: formattedImage,
            products,
          };
        }
        return null;
      })
      .filter(Boolean);
    return {
      params: { slug },
      props: {
        title,
        slug,
        description,
        photos: formattedPhotos,
      },
    };
  });
  return pages;
}

const { title, slug, description, photos } = Astro.props;
---

<Layout title={title}>
  <section class="p-6 lg:px-8">
    <Breadcrumbs
      breadcrumbs={[
        { name: "Home", href: "/" },
        { name: "Collections", href: "/collections" },
      ]}
      name={title}
      href={`/collections/${slug}`}
    />
    <PhotoGrid
      id="collection"
      photos={photos.map((photo) => ({
        title: photo?.title as string,
        src: photo?.image?.imageSrc as string,
        alt: photo?.image?.imageAlt as string,
        height: photo?.image?.height as number,
        width: photo?.image?.width as number,
      }))}
      client:load
    />
  </section>
</Layout>
